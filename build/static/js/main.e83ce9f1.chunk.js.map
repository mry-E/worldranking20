{"version":3,"sources":["components/Header.js","components/Footer.js","components/WorldMap.js","components/BarChart.js","App.js","index.js"],"names":["Header","className","Footer","href","DrawWorldMap","features","data","useState","capitalData","setCapital","useEffect","a","fetch","request","json","useCapital","map","item","item2","country_code","ISO","push","margin","width","height","projection","d3","center","translate","scale","path","radius","country","r","value","length","select","viewBox","d","fill","stroke","strokeWidth","strokeOpacity","ajust","lat","transform","cx","lon","cy","opacity","WorldMap","setFeatures","req","topojson","objects","worldmap","VerticalAxis","countries","range","y1","y2","x1","x2","i","x","y","textAnchor","dominantBaseline","fontSize","HorizontalAxis","type","unit","ticks","Tooltip","show","clientX","clientY","console","log","id","style","top","left","BarChart","setX","setY","setShow","countryDetail","setCountry","setValue","xScale","domain","nice","yScale","padding","onMouseOver","e","handleMouseOver","onMouseMove","handleMouseMove","onMouseOut","App","setData","setType","year","setYear","class","name","onChange","target","render","document","querySelector"],"mappings":"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","file":"static/js/main.e83ce9f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bulma/css/bulma.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <section className=\"hero is-fluid is-info is-small\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container has-text-centered s-divider\">\r\n          <h1 className=\"title\">World Ranking Top 20</h1>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Header;","const Footer = () => {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <div className=\"content has-text-centered\">\r\n          <p>\r\n            データは\r\n            <a href=\"https://www.globalnote.jp/\">\r\n              GLOBAL NOTE-国際統計・国別統計専門サイト\r\n            </a>\r\n            から取得しています。\r\n          </p>\r\n          <p>moriya</p>\r\n        </div>\r\n      </footer>\r\n    );\r\n  };\r\n  \r\n  export default Footer;","import React, { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { select } from \"d3-selection\";\r\nimport * as topojson from \"topojson\";\r\n\r\nfunction DrawWorldMap({features,data}){\r\n  \r\n    const[capitalData,setCapital] = useState([]);\r\n    useEffect(() => {\r\n      (async () => {\r\n        const request = await fetch(\"/data/worldCapital.json\");\r\n        const data = await request.json();\r\n        setCapital(data);\r\n      })();\r\n    },[])\r\n\r\n    const useCapital = [];\r\n    data.map((item) => {\r\n      capitalData.map((item2) => {\r\n        if(item2.country_code === item.ISO){\r\n          return useCapital.push(item2)\r\n        }\r\n      })\r\n    })\r\n\r\n    const margin ={\r\n        top:0,\r\n        bottom: 0,\r\n        left :0,\r\n        right:0\r\n    };\r\n    const width = 630- margin.left - margin.right;\r\n    const height = 330 - margin.top - margin.bottom;\r\n    const centerPos = [0,0];\r\n    const scale = 100;\r\n\r\n    const projection = d3.geoMercator()\r\n                         .center(centerPos)\r\n                         .translate([width/2,height/2+30])\r\n                         .scale(scale);\r\n    \r\n    const path = d3.geoPath().projection(projection);\r\n    \r\n    const  radius = (country) => {\r\n      let r = 0;\r\n      const max = 30;\r\n      const min = 5;\r\n      data.map((item) => {\r\n        if(item.ISO === country){\r\n          r = (max-min)*(item.value-data[data.length-1].value)/(data[0].value-data[data.length-1].value) + min;\r\n        }\r\n      })\r\n      return r;\r\n    }\r\n\r\n    return (\r\n        <div select=\"#map-container\">\r\n            <svg  viewBox={`${-margin.left} ${-margin.top} ${width} ${height}`} >\r\n            <g >\r\n          {\r\n            features.map(item => (\r\n              <path\r\n                d={path(item)}\r\n                fill=\"white\"  \r\n                stroke=\"black\"\r\n                strokeWidth=\"1\"\r\n                strokeOpacity=\"0.5\"\r\n              />\r\n            ))\r\n          }\r\n          <g>\r\n            {useCapital.map((item) => {\r\n              let ajust = 0;\r\n              if(item.lat > 40 ){\r\n                ajust = -10;\r\n              }else if(item.lat < -40){\r\n                ajust = 10;\r\n              }\r\n              return(\r\n                <g transform={`translate(${width/2},${height/2+30})`}>\r\n                <circle \r\n                cx={(item.lon*width/2)/180} \r\n                cy={(-item.lat*height/2)/90+ajust} \r\n                r={radius(item.country_code)} \r\n                fill=\"red\" \r\n                opacity=\"0.5\" \r\n                />   \r\n              </g>   \r\n              )         \r\n            })}\r\n          </g>          \r\n        </g>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction WorldMap ({data}) {\r\n    const [features, setFeatures] = useState([]);\r\n    useEffect(() => {\r\n      (async () => {\r\n        const req = await fetch(`/data/worldmap.json`);\r\n        const data = await req.json();\r\n        const { features } = topojson.feature(data, data.objects.worldmap);\r\n         setFeatures(features);\r\n      })();\r\n    }, []);\r\n    if (features == null) {\r\n      return <p>loading</p>;\r\n    }\r\n    return <DrawWorldMap features={features} data={data}/>;\r\n  };\r\n\r\n  export default WorldMap;\r\n  ","import React ,{useState,useEffect} from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"../tooltip.css\";\r\n\r\nfunction VerticalAxis({scale,countries}){\r\n    const x = 30;\r\n    const [y1,y2] = scale.range();\r\n\r\n    return(\r\n        <g>\r\n            <line x1={x} y1={y1} x2={x} y2={y2-15} stroke=\"black\"/>\r\n            <g>\r\n                {countries.map((item,i) => {\r\n                    return(\r\n                        <g>\r\n                            <line x1={x-5} y1={12.5+i*10} x2={x} y2={12.5+i*10} stroke=\"black\"/>\r\n                            <text \r\n                            x={x-15}\r\n                            y={12.5+i*10}\r\n                            textAnchor=\"middle\"\r\n                            dominantBaseline=\"central\"\r\n                            fontSize=\"8\"\r\n                            >\r\n                             {item}\r\n                            </text>\r\n                        </g>\r\n                    )\r\n                })}\r\n            </g>\r\n        </g>\r\n    )\r\n}\r\n\r\nfunction HorizontalAxis({scale,type,unit}){\r\n    const y = 210;\r\n    const [x1,x2] = scale.range();\r\n    return(\r\n      <g>\r\n        <line x1={x1} y1={y} x2={x2} y2={y} stroke=\"black\"/>\r\n        <g>\r\n          {scale.ticks().map((x) => {\r\n          return (\r\n          <g transform={`translate(${scale(x)},${y})`}>\r\n            <line x1='0' y1='0' x2='0' y2='5' stroke=\"black\"></line>\r\n            <text \r\n            x = \"0\"\r\n            y = \"13\"\r\n            textAnchor=\"middle\"\r\n            dominantBaseline=\"central\"\r\n            fontSize=\"8\"\r\n          >\r\n            {x}\r\n            </text>\r\n          </g>\r\n          );\r\n        })}\r\n        <text x={x2+20} y={y} textAnchor=\"middle\" dominantBaseline=\"central\" fontSize=\"8\">\r\n            ({unit[type]})\r\n        </text>\r\n        </g>\r\n      </g>\r\n    );\r\n}\r\n\r\nfunction Tooltip ({show,clientX,clientY,country,value}){\r\n    console.log(clientY)\r\n    return (\r\n        <div>\r\n          {show && (\r\n          <div\r\n            id=\"tooltip\"\r\n            style={{ top: `${clientY-150}px`, left: `${clientX+20}px` }}\r\n          >\r\n            {country}\r\n            <br/>\r\n            {value}\r\n          </div>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction BarChart({data,type}){\r\n    const unit = {\r\n        \"Aging\":\"%\",\r\n        \"CO2\":\"百万トン\",\r\n        \"GDP\":\"百万US$\",\r\n        \"Income\":\"US$\",\r\n        \"Lifespan\":\"歳\",\r\n        \"Population\":\"千人\",\r\n        \"Tax\":\"%\"\r\n    };\r\n\r\n    const countries = [];\r\n    for(let i = 0;i < data.length;i++){\r\n        countries[i] = data[i].ISO;\r\n    }\r\n    \r\n    const margin = {top: 20, right: 20, bottom: 30, left: 40}\r\n    const width = 800 - margin.left - margin.right;\r\n    const height = 280 - margin.top - margin.bottom;\r\n    const [clientX,setX] = useState(0);\r\n    const [clientY,setY] = useState(0);\r\n    const [show,setShow] = useState(false);\r\n    const [countryDetail,setCountry] = useState();\r\n    const [value,setValue] = useState(0);\r\n\r\n    const xScale = d3.scaleLinear()\r\n          .domain([d3.min(data,function(d) {return d.value;}),d3.max(data,function(d) {return d.value;})])\r\n          .range([30, width-50])\r\n          .nice();\r\n        \r\n    const yScale = d3.scaleBand()\r\n          .padding(0.1)\r\n          .domain(countries)\r\n          .range([0, height]);\r\n    \r\n    const handleMouseOver = (e,item) => {\r\n        setShow(true);\r\n        setX(e.clientX);\r\n        setY(e.clientY);\r\n        setCountry(item.country);\r\n        setValue(item.value);\r\n    }\r\n\r\n    const handleMouseMove = (e) => {\r\n        setX(e.clientX);\r\n        setY(e.clientY);\r\n    }\r\n\r\n    const handleMouseOut = (e) => {\r\n        setShow(false);\r\n    }\r\n    return(\r\n        <div>\r\n            <svg viewBox={`0 0 ${width} ${height}`}>\r\n            <VerticalAxis scale={yScale}  countries={countries}/>\r\n            <HorizontalAxis scale={xScale} type={type} unit={unit}/>\r\n                <g>\r\n                    {data.map((item,i) => {\r\n                        return(\r\n                            <g>\r\n                                <rect \r\n                                x=\"30\" \r\n                                y={10+i*10} \r\n                                width={xScale(item.value)-50} \r\n                                height={5} \r\n                                fill=\"red\"\r\n                                onMouseOver={(e) => handleMouseOver(e,item)}\r\n                                onMouseMove={(e) => handleMouseMove(e)}\r\n                                onMouseOut={(e) => handleMouseOut(e)}\r\n                                />\r\n                            </g>\r\n                        )\r\n                    })}\r\n                </g>\r\n            </svg>\r\n            <Tooltip show={show} clientX={clientX} clientY={clientY} country={countryDetail} value={value} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BarChart;","import Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport WorldMap from \"./components/WorldMap\";\r\nimport React ,{useState,useEffect } from \"react\";\r\nimport BarChart from \"./components/BarChart\";\r\n\r\nfunction App(){\r\n    const [data,setData] = useState([]);\r\n    const [type,setType] = useState(\"GDP\");\r\n    const [year,setYear] = useState(\"2019\");\r\n    useEffect(() => {\r\n        (async () => {\r\n          const request = await fetch(`data/${type}/${year}.json`);\r\n          const data = await request.json();\r\n          setData(data);\r\n        })();\r\n      },[type,year]);\r\n\r\n      const handleTypeChange = (e) => {\r\n          setType(e.target.value);\r\n      }\r\n      \r\n      const handleYearChange = (e) => {\r\n          setYear(e.target.value);\r\n      }\r\n    return(\r\n        <div>\r\n            <Header /> \r\n            <div class=\"select is-primary is-large\" style={{margin: \"10px\"}}>\r\n                <select name=\"type\" value={type} onChange={handleTypeChange}>\r\n                    <option value=\"GDP\">GDP</option>\r\n                    <option value=\"Population\">人口</option>\r\n                    <option value=\"Aging\">高齢化率</option>\r\n                    <option value=\"CO2\">二酸化炭素排出量</option>\r\n                    <option value=\"Income\">平均年収</option>\r\n                    <option value=\"Lifespan\">平均寿命</option>\r\n                    <option value=\"Tax\">消費税</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"select is-primary is-large\" style={{margin: \"10px\"}}>\r\n                <select name=\"year\" value={year} onChange={handleYearChange}>\r\n                    <option>2000</option>\r\n                    <option>2005</option>\r\n                    <option>2010</option>\r\n                    <option>2015</option>\r\n                    <option>2019</option>\r\n                </select>\r\n            </div>\r\n                <div className=\"card\" style={{ width:\"97%\" , margin: \"20px\"}}>\r\n                    <div className=\"card-content\">\r\n                        <div className=\"content\">\r\n                            <WorldMap data={data}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <div className=\"card\" style={{ width:\"97%\" ,  margin: \"20px\"}}>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        <BarChart data={data} type={type}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\n\r\nrender(<App />,document.querySelector(\"#content\"));"],"sourceRoot":""}